/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        layer1command: layer1command {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER1COMMAND";
            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <300>;
            bindings = <&tog>, <&kp>;

            quick-tap-ms = <150>;
        };

        layer2option: layer2option {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER2OPTION";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <37>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
        };

        esc: esc {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <1>;
            quick-tap-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bluetooth {
            bindings = <&none>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R                     &kp T       &kp Y      &kp U                          &kp I     &kp O      &kp P       &none
&none  &kp A  &kp S  &kp D      &kp F                     &kp G       &kp H      &kp J                          &kp K     &kp L      &kp SQT     &none
&none  &kp Z  &kp X  &kp C      &kp V                     &kp CAPS    &kp B      &kp N                          &kp M     &kp COMMA  &kp PERIOD  &none
                     &kp LSHFT  &layer2option 2 LEFT_ALT  &kp RET     &kp SPACE  &layer1command 1 LEFT_COMMAND  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1      &kp N2                &kp N3                &kp N4                    &kp N5        &kp N6     &kp N7                      &kp N8     &kp N9  &kp N0        &none
&none  &kp TAB     &none                 &kp K_PREV            &kt K_PLAY_PAUSE          &kp C_NEXT    &none      &kp UP                      &none      &none   &none         &none
&none  &kp ESCAPE  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &none                     &kp F13       &kp LEFT   &kp DOWN                    &kp RIGHT  &none   &bt BT_SEL 0  &bt BT_SEL 0
                                         &kp LCTRL             &layer2option 2 LEFT_ALT  &kp RET       &kp SPACE  &layer1command 1 RIGHT_GUI  &kp BSPC
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL          &kp AT        &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp RSHIFT        &trans        &trans    &kp GRAVE  &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans    &trans     &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                                       &kp LGUI  &trans     &kp ENTER    &kp SPACE  &trans     &kp RALT
            >;
        };
    };
};
